搭建openresty

在 Linux 上，通常需要使用 sudo 来获取 root 权限来完成安装。
#sudo su

安装前的准备
您必须将这些库 perl 5.6.1+, libpcre, libssl安装在您的电脑之中。 对于 Linux来说, 您需要确认使用 ldconfig 命令，让其在您的系统环境路径中能找到它们。
# yum install postgresql-devel pcre-devel openssl-devel gcc curl

创建安装目录
# mkdir  -p /opt/openresty
创建运行用户
# groupadd www
# useradd -r -g www www -s /sbin/nologin
从下载页 http://openresty.org/cn/download.html 下载最新的 OpenResty® 源码包，并且像下面的示例一样将其解压:
解压
# tar -xzvf openresty-VERSION.tar.gz
进源码包
# cd openresty-VERSION/
指定配置
./configure --prefix=/opt/openresty \
            --with-luajit \
            --without-http_redis2_module \
            --with-http_iconv_module \
            --with-http_postgres_module
            
编译
# make
如果您的电脑支持多核 make 工作的特性, 您可以这样编译:
# make -j2    //假设您是的机器是双核。
安装
# make install
创建软连接
# ln -s /opt/openresty/nginx/sbin/nginx /usr/sbin/nginx


搭建mysql

安装前的准备
您必须将这些库 ncurses, bison, cmake 安装在您的电脑之中。 对于 Linux来说, 您需要确认使用 ldconfig 命令，让其在您的系统环境路径中能找到它们。
# yum -y install ncurses   ncurses-devel bison bison-devel cmake
创建安装目录
# mkdir  -p /opt/mysql5.7

创建运行用户
# groupadd mysql
# useradd -r -g mysql -s /bin/false mysql
下载文件
mysql-VERSION.tar.gz
解压
# tar zxvf mysql-VERSION.tar.gz
进入源码包
# cd mysql-VERSION
指定配置
# cmake -DCMAKE_INSTALL_PREFIX=/opt/mysql5.7 -DMYSQL_DATADIR=/opt/mysql5.7/data -DDOWNLOAD_BOOST=1 -DWITH_BOOST=./boost/boost_1_59_0/
编译并安装
# make && make install
初始化数据(切换当前目录到/opt/mysql5.7)
#cd /opt/mysql5.7
创建数据目录 日志目录
# mkdir  data log
更改文件所有者和所属组都为mysql
# chown mysql:mysql data log
更改权限
# chmod 750  data log
初始化
# bin/mysqld --initialize --user=mysql
mysql的服务脚本放到系统服务中
# cp ./support-files/mysql.server /etc/init.d/mysqld
# chmod 755 /etc/init.d/mysqld
编辑刚刚复制来的Mysql数据库脚本文件 /etc/init.d/mysqld，将大约46、47行的basedir与datadir参数分别修改为Mysql数据库程序保存目录和真实数据库文件内容。
#启动数据库
# /etc/init.d/mysqld start
链接数据库
# /opt/mysql5.7/bin/mysql -uroot -p  输入之前初始化创建的密码 
连上数据库之后，现在还不能使用，必须重置密码
# SET PASSWORD FOR 'root'@'localhost' = PASSWORD('123456');
恭喜你，mysql安装完毕并运行了
# ln -s /opt/mysql5.7/bin/mysql /usr/sbin/mysql

贴出/etc/my.cnf 文件简单配置  你可以加入mysql参数来优化你的数据库
[mysqld]
datadir=/opt/mysql5.7/data
socket=/opt/mysql5.7/log/mysql.sock
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0
# Settings user and group are ignored when systemd is used.
# If you need to run mysqld under a different user or group,
# customize your systemd unit file for mariadb according to the
# instructions in http://fedoraproject.org/wiki/Systemd
explicit_defaults_for_timestamp=true

[mysqld_safe]
log-error=/opt/mysql5.7/log/mariadb.log
pid-file=/opt/mysql5.7/mariadb.pid

[client]
socket=/opt/mysql5.7/log/mysql.sock
#
# include all files from the config directory
#
!includedir /etc/my.cnf.d

搭建php7.1

安装前的准备
# yum -y install gcc gcc-c++ bzip2 bzip2-devel autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers gd gd2 gd-devel gd2-devel perl-CPAN pcre-devel
安装libcrypt
# wget ftp://mcrypt.hellug.gr/pub/crypto/mcrypt/attic/libmcrypt/libmcrypt-2.5.7.tar.gz  
# tar -zxf libmcrypt-2.5.7.tar.gz 
# cd libmcrypt-2.5.7/
# ./configure --prefix=/usr/local/lib/libmcrypt
# make && make install
安装 libzip
# wget https://nih.at/libzip/libzip-1.2.0.tar.gz
# tar -zxvf libzip-1.2.0.tar.gz
# cd libzip-1.2.0
# ./configure
# make -j4 && make install

开始搭建
解压
# tar -zxvf php-7.1.29.tar.gz
# cd php-7.1.29
# ./configure --prefix=/opt/php7.1 \
    --with-config-file-path=/opt/php7.1/etc \
    --with-fpm-user=www \
    --with-fpm-group=www \
    --with-libzip=/usr/lib/x86_64-linux-gnu \
    --with-zlib \
    --with-mcrypt \
    --with-curl \
    --with-pear \
    --with-gettext \
    --with-openssl \
    --with-pdo-mysql \
    --with-pdo-mysql=mysqlnd \
    --with-pdo-pgsql=/usr/bin/pg_config \
    --with-gd \
    --with-freetype-dir=/usr/include/freetype2/freetype/ \
    --with-jpeg-dir \
    --with-png-dir \
    --enable-mysqlnd \
    --enable-gd-native-ttf \
    --enable-bcmath \
    --enable-fpm \
    --enable-mbstring \
    --enable-phpdbg \
    --enable-shmop \
    --enable-sockets \
    --enable-sysvmsg \
    --enable-sysvsem \
    --enable-sysvshm \
    --enable-zip \
    --enable-pcntl

  编译
  # make
  安装
  # make install
复制 ini文件到安装目录
# cp php.ini-development /opt/php7.1/etc/php.ini
复制 执行文件
# // cp sapi/fpm/init.d.php-fpm /etc/init.d/php7.1-fpm
# // chmod +x /etc/init.d/php7.1-fpm
# cd /opt/php7.1/etc
# mv php-fpm.conf.default php-fpm.conf
# mv php-fpm.d/www.conf.default php-fpm.d/www.conf
# 创建链接到二进制目录
# ln -s /opt/php7.1/sbin/php-fpm /usr/sbin/php-fpm
# ln -s /opt/php7.1/bin/php /usr/sbin/php
# ln -s /opt/php7.1/bin/phpize /usr/sbin/phpize
修改运行用户
# vim php-fpm.d/www.conf
去掉listen相关的注释
# php-fpm 启动成功
# php -v
至此 php 安装完毕

配置nginx 解释以 .php 结尾的文件
# cd /opt/openresty/nginx/conf
# vim nginx.conf
修改 运行用户为www      user www
去掉location ~ \.php $块前面的注释
修改  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name
增加 index.php 
# nginx -t 测试配置文件语法
# nginx -s reload




